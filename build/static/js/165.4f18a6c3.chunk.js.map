{"version":3,"file":"static/js/165.4f18a6c3.chunk.js","mappings":"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","sources":["containers/callBackForm/CallBackForm.jsx","routes/awards/awards.jsx","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./callBackForm.scss\";\r\n// import ReCAPTCHA from \"react-google-recaptcha\";\r\nimport Button from \"../../components/button/Button\";\r\nimport { Alert, Container } from \"react-bootstrap\";\r\nimport API from \"../../api\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().required(\"Name is required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n  mobile: Yup.string()\r\n    .max(10, \"Maximum 10 number allowed\")\r\n    .matches(/^[0-9]{10}$/, \"Invalid mobile number\")\r\n    .required(\"Mobile number is required\"),\r\n  center: Yup.string().required(\"Center is required\"),\r\n});\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  mobile: \"\",\r\n  center: \"\",\r\n};\r\n\r\nconst CallBackForm = () => {\r\n  const [alert, setAlert] = useState(null);\r\n  const [centers, setCenters] = useState(\"\");\r\n\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    // e.preventDefault();\r\n    API.post(\"/request_form\", values)\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setAlert({\r\n            type: \"success\",\r\n            message: \"Your request has been submitted, we will reach you soon.\",\r\n          });\r\n          resetForm();\r\n        }\r\n\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        setAlert({\r\n          type: \"warning\",\r\n          message: error.message,\r\n        });\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getCenters = () => {\r\n    API.get(\"/centers\")\r\n      .then((response) => {\r\n        setCenters(response?.data?.data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getCenters();\r\n    setTimeout(() => {\r\n      if (alert) {\r\n        setAlert(false);\r\n      }\r\n    }, 3000);\r\n  }, [alert]);\r\n\r\n  return (\r\n    <Container className=\"CallBackForm\">\r\n      {/* // <div className=\"CallBackForm container-default\"> */}\r\n      <div className=\"CallBackForm-title title\">Request Call Back</div>\r\n      <div\r\n        className=\"CallBackForm-form-outer-div\"\r\n        style={{ width: \"80%\", margin: \"auto\" }}\r\n      >\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={handleSubmit}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {({ errors, touched }) => (\r\n            <Form>\r\n              {alert && <Alert variant={alert.type}>{alert.message}</Alert>}\r\n              <div className=\"CallBackForm-form-inner-div\">\r\n                <div className=\"form-field-div\">\r\n                  <label>Name</label>\r\n                  <Field\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    className=\"formInput form-control\"\r\n                  />\r\n                </div>\r\n                {errors.name && touched.name ? (\r\n                  <div className=\"form-error\">{errors.name}</div>\r\n                ) : null}\r\n                <div className=\"form-field-div\">\r\n                  <label>Phone No.</label>\r\n                  <Field\r\n                    id=\"mobile\"\r\n                    name=\"mobile\"\r\n                    className=\"formInput form-control\"\r\n                  />\r\n                </div>\r\n                {errors.mobile && touched.mobile ? (\r\n                  <div className=\"form-error\">{errors.mobile}</div>\r\n                ) : null}\r\n                <div className=\"form-field-div\">\r\n                  <label>Email Address</label>\r\n                  <Field\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    className=\"formInput form-control\"\r\n                  />\r\n                </div>\r\n                {errors.email && touched.email ? (\r\n                  <div className=\"form-error\">{errors.email}</div>\r\n                ) : null}\r\n                <div className=\"form-field-div\">\r\n                  <label>Perferred Center</label>\r\n                  <Field\r\n                    as=\"select\"\r\n                    id=\"center\"\r\n                    name=\"center\"\r\n                    className=\"formInput form-control\"\r\n                  >\r\n                    <option> </option>\r\n                    {centers &&\r\n                      centers?.map((center) => (\r\n                        <option key={center.id} value={center.id}>{center.title}</option>\r\n                      ))}\r\n                  </Field>\r\n                </div>\r\n                {errors.center && touched.center ? (\r\n                  <div className=\"form-error\">{errors.center}</div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"form-bottom pt-0\">\r\n                <div className=\"text-capcha\">\r\n                  <div className=\"text\" style={{visibility:\"hidden\"}}>\r\n                    By selecting 'Submit,' I grant the company permission to\r\n                    contact me and share information via email, SMS, or phone.\r\n                  </div>\r\n                  {/* <div className=\"capcha\">\r\n                    <ReCAPTCHA sitekey=\"Your client site key\" />\r\n                  </div> */}\r\n                </div>\r\n                <div className=\"form-submit pt-0\">\r\n                  <Button title=\"Submit\" />\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n      {/* </div> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CallBackForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./awards.scss\";\r\nimport API from \"../../api\";\r\nimport { Circles } from \"react-loader-spinner\";\r\nimport { Button, Col, Container, Image, Modal, Row } from \"react-bootstrap\";\r\nimport { rewardsBanner } from \"../../assets\";\r\nimport CallBackForm from \"../../containers/callBackForm/CallBackForm\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\r\n\r\nconst Awards = () => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [data, setData] = useState([]);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedReward, setSelectedReward] = useState(null);\r\n\r\n  const handleKnowMoreClick = (rewardId) => {\r\n    API.get(`/reward/${rewardId}`)\r\n      .then((response) => {\r\n        setSelectedReward(response?.data?.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedReward(null);\r\n    setShowModal(false);\r\n  };\r\n\r\n  const fetchRewards = () => {\r\n    setLoader(true);\r\n    API.get(\"/reward\")\r\n      .then((response) => {\r\n        setData(response?.data?.data);\r\n        setLoader(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n        setLoader(false);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    fetchRewards();\r\n  }, []);\r\n\r\n  return loader ? (\r\n    <>\r\n      <Circles\r\n        height=\"120\"\r\n        width=\"120\"\r\n        color=\"#ffd800\"\r\n        ariaLabel=\"circles-loading\"\r\n        wrapperStyle={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: \"40vh\",\r\n        }}\r\n        wrapperClass=\"\"\r\n        visible={true}\r\n      />\r\n    </>\r\n  ) : (\r\n    <div className=\"breadhead\">\r\n      <Helmet>\r\n        <title>Our Rewards - Arena Animation</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Click here to learn about out student’s success. Our students participated in international and national level competitions and wins various rewards. Check here!\"\r\n        />\r\n        <link\r\n          rel=\"canonical\"\r\n          href=\"http://animationdelhincr.com/rewards\"\r\n        ></link>\r\n      </Helmet>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item to=\"/\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Rewards</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"top-banner-section\">\r\n        <Image src={rewardsBanner} alt=\"\" fluid className=\"height-80vh\" />\r\n        <h1 className=\"reward-title\">Rewards</h1>\r\n      </div>\r\n      <div className=\"second-section\">\r\n        <h3>AWARDS AND ACCOLADES</h3>\r\n        <p className=\"second-desc\">\r\n          Arena Animation enables students to reach their career goals and opens\r\n          up various avenues for them to achieve their highest creative\r\n          potential. Arena Animation students participate and win at national\r\n          and international level competitions.\r\n        </p>\r\n      </div>\r\n      <div className=\"rewards-card-section\">\r\n        <Container>\r\n          <Row className=\"rewards-card-row\">\r\n            {data?.map((reward) => (\r\n              <Col md={6} lg={4} key={reward?.id} className=\"mb-5 px-3\">\r\n                <div className=\"reward-card-container\">\r\n                  <div className=\"reward-card-content\">\r\n                    <Image src={reward?.image} fluid />\r\n                    <div className=\"text-center mt-3\">{reward?.title}</div>\r\n                  </div>\r\n                  <div className=\"text-center mt-3\">\r\n                    <Button\r\n                      variant=\"outline-light\"\r\n                      onClick={() => handleKnowMoreClick(reward?.id)}\r\n                    >\r\n                      Know More\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n      <CallBackForm />\r\n      <Modal show={showModal} onHide={handleCloseModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{selectedReward?.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* Display reward details here */}\r\n          {selectedReward && (\r\n            <div>\r\n              <Image src={selectedReward?.image} rounded fluid />\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: selectedReward?.description,\r\n                }}\r\n                className=\"mt-2\"\r\n              />\r\n            </div>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Awards;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;"],"names":["validationSchema","Yup","shape","name","required","email","mobile","max","matches","center","initialValues","CallBackForm","alert","setAlert","useState","centers","setCenters","useEffect","API","get","then","response","_response$data","data","catch","err","console","error","setTimeout","_jsxs","Container","className","children","_jsx","style","width","margin","Formik","onSubmit","handleSubmit","values","_ref","resetForm","post","type","message","log","_ref2","errors","touched","Form","Alert","variant","Field","id","as","map","value","title","visibility","Button","Awards","loader","setLoader","setData","showModal","setShowModal","selectedReward","setSelectedReward","window","scrollTo","_response$data2","_Fragment","Circles","height","color","ariaLabel","wrapperStyle","display","justifyContent","alignItems","wrapperClass","visible","Helmet","content","rel","href","Breadcrumb","Item","to","active","Image","src","rewardsBanner","alt","fluid","Row","reward","Col","md","lg","image","onClick","handleKnowMoreClick","rewardId","concat","Modal","show","onHide","handleCloseModal","Header","closeButton","Title","Body","rounded","dangerouslySetInnerHTML","__html","description","React","ref","bsPrefix","size","disabled","props","prefix","useBootstrapPrefix","buttonProps","tagName","useButtonProps","Component","classNames","displayName"],"sourceRoot":""}