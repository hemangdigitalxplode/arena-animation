{"version":3,"file":"static/js/494.fdf9e641.chunk.js","mappings":"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","sources":["containers/callBackForm/CallBackForm.jsx","components/googleMap/GoogleMap.jsx","containers/getInTouch/GetInTouch.jsx","routes/contact/Contact.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./callBackForm.scss\";\r\n// import ReCAPTCHA from \"react-google-recaptcha\";\r\nimport Button from \"../../components/button/Button\";\r\nimport { Alert, Container } from \"react-bootstrap\";\r\nimport API from \"../../api\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string().required(\"Name is required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n  mobile: Yup.string()\r\n    .max(10, \"Maximum 10 number allowed\")\r\n    .matches(/^[0-9]{10}$/, \"Invalid mobile number\")\r\n    .required(\"Mobile number is required\"),\r\n  center: Yup.string().required(\"Center is required\"),\r\n});\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  mobile: \"\",\r\n  center: \"\",\r\n};\r\n\r\nconst CallBackForm = () => {\r\n  const [alert, setAlert] = useState(null);\r\n  const [centers, setCenters] = useState(\"\");\r\n\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    // e.preventDefault();\r\n    API.post(\"/request_form\", values)\r\n      .then((response) => {\r\n        if (response.data) {\r\n          setAlert({\r\n            type: \"success\",\r\n            message: \"Your request has been submitted, we will reach you soon.\",\r\n          });\r\n          resetForm();\r\n        }\r\n\r\n        console.log(response.data);\r\n      })\r\n      .catch((error) => {\r\n        setAlert({\r\n          type: \"warning\",\r\n          message: error.message,\r\n        });\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getCenters = () => {\r\n    API.get(\"/centers\")\r\n      .then((response) => {\r\n        setCenters(response?.data?.data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getCenters();\r\n    setTimeout(() => {\r\n      if (alert) {\r\n        setAlert(false);\r\n      }\r\n    }, 3000);\r\n  }, [alert]);\r\n\r\n  return (\r\n    <Container className=\"CallBackForm\">\r\n      {/* // <div className=\"CallBackForm container-default\"> */}\r\n      <div className=\"CallBackForm-title title\">Request Call Back</div>\r\n      <div\r\n        className=\"CallBackForm-form-outer-div\"\r\n        style={{ width: \"80%\", margin: \"auto\" }}\r\n      >\r\n        <Formik\r\n          initialValues={initialValues}\r\n          onSubmit={handleSubmit}\r\n          validationSchema={validationSchema}\r\n        >\r\n          {({ errors, touched }) => (\r\n            <Form>\r\n              {alert && <Alert variant={alert.type}>{alert.message}</Alert>}\r\n              <div className=\"CallBackForm-form-inner-div\">\r\n                <div className=\"form-field-div\">\r\n                  <label>Name</label>\r\n                  <Field\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    className=\"formInput form-control\"\r\n                  />\r\n                </div>\r\n                {errors.name && touched.name ? (\r\n                  <div className=\"form-error\">{errors.name}</div>\r\n                ) : null}\r\n                <div className=\"form-field-div\">\r\n                  <label>Phone No.</label>\r\n                  <Field\r\n                    id=\"mobile\"\r\n                    name=\"mobile\"\r\n                    className=\"formInput form-control\"\r\n                  />\r\n                </div>\r\n                {errors.mobile && touched.mobile ? (\r\n                  <div className=\"form-error\">{errors.mobile}</div>\r\n                ) : null}\r\n                <div className=\"form-field-div\">\r\n                  <label>Email Address</label>\r\n                  <Field\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    className=\"formInput form-control\"\r\n                  />\r\n                </div>\r\n                {errors.email && touched.email ? (\r\n                  <div className=\"form-error\">{errors.email}</div>\r\n                ) : null}\r\n                <div className=\"form-field-div\">\r\n                  <label>Perferred Center</label>\r\n                  <Field\r\n                    as=\"select\"\r\n                    id=\"center\"\r\n                    name=\"center\"\r\n                    className=\"formInput form-control\"\r\n                  >\r\n                    <option> </option>\r\n                    {centers &&\r\n                      centers?.map((center) => (\r\n                        <option key={center.id} value={center.id}>{center.title}</option>\r\n                      ))}\r\n                  </Field>\r\n                </div>\r\n                {errors.center && touched.center ? (\r\n                  <div className=\"form-error\">{errors.center}</div>\r\n                ) : null}\r\n              </div>\r\n              <div className=\"form-bottom pt-0\">\r\n                <div className=\"text-capcha\">\r\n                  <div className=\"text\" style={{visibility:\"hidden\"}}>\r\n                    By selecting 'Submit,' I grant the company permission to\r\n                    contact me and share information via email, SMS, or phone.\r\n                  </div>\r\n                  {/* <div className=\"capcha\">\r\n                    <ReCAPTCHA sitekey=\"Your client site key\" />\r\n                  </div> */}\r\n                </div>\r\n                <div className=\"form-submit pt-0\">\r\n                  <Button title=\"Submit\" />\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n      {/* </div> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CallBackForm;\r\n","import React from \"react\";\r\nimport \"./googleMap.scss\";\r\nimport { GoogleMap, MarkerF, useLoadScript } from \"@react-google-maps/api\";\r\nimport { Rings } from \"react-loader-spinner\";\r\n\r\nconst containerStyle = {\r\n  width: \"100%\",\r\n  height: \"320px\",\r\n  borderRadius: \"24px\",\r\n};\r\n\r\nconst MyComponent = ({ lat, lng }) => {\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyDOtPPlkcFthnWLYlcXCIfDakO3tM-GHPY\",\r\n  });\r\n  const center = { lat: lat, lng: lng };\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={14}>\r\n      <MarkerF position={{ lat: lat, lng: lng }} />\r\n    </GoogleMap>\r\n  ) : (\r\n    <Rings\r\n      height=\"80\"\r\n      width=\"80\"\r\n      color=\"#ffd800\"\r\n      radius=\"6\"\r\n      wrapperStyle={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"320px\",\r\n      }}\r\n      wrapperClass=\"\"\r\n      visible={true}\r\n      ariaLabel=\"rings-loading\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default MyComponent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./getInTouch.scss\";\r\nimport { Row, Col, Container,Breadcrumb } from \"react-bootstrap\";\r\nimport Button from \"../../components/button/Button\";\r\nimport API from \"../../api\";\r\nimport GoogleMap from \"../../components/googleMap/GoogleMap\";\r\nimport { Circles } from \"react-loader-spinner\";\r\n\r\n//   {\r\n//     id: 1,\r\n//     location: \"Preet Vihar\",\r\n//     area: \"New Delhi\",\r\n//     fullAddress: \"F-25 3rd Floor, above KFC, Preet Vihar, New Delhi\",\r\n//     phoneNo: \"098702 33115\",\r\n//     img: Map,\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     location: \"SOUTH EXTETENSON\",\r\n//     area: \"New Delhi\",\r\n//     fullAddress:\r\n//       \"E 75, South Extension, Block E, South Extension l, New Delhi, Delhi 110049\",\r\n//     phoneNo: \"099713 67152\",\r\n//     img: Map,\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     location: \"CHANDIGARH TRICITY\",\r\n//     area: \"Sector 34A\",\r\n//     fullAddress:\r\n//       \"Sco-13-15 Sector 34a, Level-I, Above Dominos Chandigarh, Chandigarh -160022\",\r\n//     phoneNo: \"8800012691/880012692\",\r\n//     img: Map,\r\n//   },\r\n//   {\r\n//     id: 4,\r\n//     location: \"PITAMPURA\",\r\n//     area: \"New Delhi\",\r\n//     fullAddress:\r\n//       \"Metro Station, Building No 368, First Kohat Enclave, Above Yes Bank, Kohat Enclave, Pitam Pura, New Delhi, Delhi 110034\",\r\n//     phoneNo: \"098118 57761\",\r\n//     img: Map,\r\n//   },\r\n//   {\r\n//     id: 5,\r\n//     location: \"KAMILA NAGAR\",\r\n//     area: \"New Delhi\",\r\n//     fullAddress:\r\n//       \"D-98, Kamla Nagar, near North Campus, DU, New Delhi, Delhi 110007\",\r\n//     phoneNo: \"097112 25298\",\r\n//     img: Map,\r\n//   },\r\n//   {\r\n//     id: 6,\r\n//     location: \"NOIDA-18\",\r\n//     area: \"Noida Sector-18\",\r\n//     fullAddress:\r\n//       \"Arena Animation, P-6/702, 7th Floor, Ocean Complex, Sector-18, Noida.\",\r\n//     phoneNo: \"9811001395/9811001368\",\r\n//     img: Map,\r\n//   },\r\n//   {\r\n//     id: 7,\r\n//     location: \"NOIDA-62\",\r\n//     area: \"Noida Sector-62\",\r\n//     fullAddress:\r\n//       \"B-23/A, Gauravdeep Heights, sector-62, Nodia(Behind Fortis Hospital)\",\r\n//     phoneNo: \"9873000213/9810780148\",\r\n//     img: Map,\r\n//   },\r\n// ];\r\n\r\nconst GetInTouch = ({ handleCall, handleButtonClick }) => {\r\n  const [centers, setCenters] = useState(\"\");\r\n  const [navigation, setNavigation] = useState(\"\");\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const getCenters = () => {\r\n    setLoader(true);\r\n    API.get(\"/centers\")\r\n      .then((response) => {\r\n        setLoader(false);\r\n        setCenters(response?.data?.data);\r\n        setNavigation(response?.data?.data[0]);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  const redirectToGoogleMaps = (latitude, longitude) => {\r\n    const url = `https://www.google.com/maps/search/?api=1&query=${latitude},${longitude}`;\r\n    window.open(url, \"_blank\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCenters();\r\n  }, []);\r\n\r\n  const handleChange = (item) => {\r\n    setNavigation(item);\r\n  };\r\n\r\n  return loader ? (\r\n    <Circles\r\n      height=\"120\"\r\n      width=\"120\"\r\n      color=\"#ffd800\"\r\n      ariaLabel=\"circles-loading\"\r\n      wrapperStyle={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"40vh\",\r\n      }}\r\n      wrapperClass=\"\"\r\n      visible={true}\r\n    />\r\n  ) : (\r\n    <div className=\"get-in-touch\">\r\n      <div className=\"breadhead\">\r\n        <Breadcrumb>\r\n          <Breadcrumb.Item to=\"/\">Home</Breadcrumb.Item>\r\n          <Breadcrumb.Item active>Contact</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n      </div>\r\n      {/* <div className=\"container-default\"> */}\r\n      <Container>\r\n        <h1 className=\"title get-in-touch-title\">Get In Touch</h1>\r\n        <Row className=\"get-in-touch-row\">\r\n          <Col lg={3} className=\"get-in-touch-nav\">\r\n            {centers &&\r\n              centers.map((address) => (\r\n                <div\r\n                  key={address.id}\r\n                  className={\r\n                    navigation.id === address.id ? \"active\" : \"address-div\"\r\n                  }\r\n                  onClick={() => handleChange(address)}\r\n                >\r\n                  <div>\r\n                    <div className=\"address-heading\">{address.title}</div>\r\n                    <div className=\"address-div-subheading\">\r\n                      {address.title_second}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"arrow\">\r\n                    {navigation.id === address.id ? \"▶\" : \"\"}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </Col>\r\n          <Col lg={8} className=\"get-in-touch-card\">\r\n            <div className=\"map-div\">\r\n              <GoogleMap\r\n                lat={parseFloat(navigation?.latitude, 10)}\r\n                lng={parseFloat(navigation?.longitude, 10)}\r\n              />\r\n            </div>\r\n            <Row className=\"card-bottom\">\r\n              <Col lg={6} className=\"left\">\r\n                <div>Phone no. - {navigation?.phone}</div>\r\n                <div className=\"fullAddress\">{navigation?.address}</div>\r\n              </Col>\r\n              <Col lg={6} className=\"right\">\r\n                <div className=\"buttons\">\r\n                  <Button\r\n                    title=\"Call Now\"\r\n                    onClick={() => handleCall(navigation?.phone)}\r\n                  />\r\n                  <Button title=\"Enquire Now\" onClick={handleButtonClick} />\r\n                </div>\r\n                <div\r\n                  className=\"location-link\"\r\n                  onClick={() =>\r\n                    redirectToGoogleMaps(\r\n                      navigation?.latitude,\r\n                      navigation?.longitude\r\n                    )\r\n                  }\r\n                >\r\n                  Get Direction On Map\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      {/* </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetInTouch;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport CallBackForm from \"../../containers/callBackForm/CallBackForm\";\r\nimport GetInTouch from \"../../containers/getInTouch/GetInTouch\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Contact = () => {\r\n  const callBackFormRef = useRef(null);\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  const handleCall = (phoneNumber) => {\r\n    window.location.href = `tel:${phoneNumber}`;\r\n  };\r\n\r\n  const handleButtonClick = () => {\r\n    const yOffset = -80; // Offset of 200px\r\n    const element = callBackFormRef.current;\r\n    const y =\r\n      element.getBoundingClientRect().top + window.pageYOffset + yOffset;\r\n\r\n    window.scrollTo({ top: y, behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <> <Helmet>\r\n    <title>Contact Us - Arena Animation</title>\r\n    <meta name=\"description\" content=\"You can contact our experienced professionals to know about courses, fee’s structure, placements, course durations and more. Call or mail us now to get a quote!\" />\r\n    <link rel=\"canonical\" href='http://animationdelhincr.com/contact'></link>\r\n</Helmet>\r\n      <GetInTouch\r\n        handleCall={handleCall}\r\n        handleButtonClick={handleButtonClick}\r\n      />\r\n      <div ref={callBackFormRef}>\r\n        <CallBackForm />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"names":["validationSchema","Yup","shape","name","required","email","mobile","max","matches","center","initialValues","CallBackForm","alert","setAlert","useState","centers","setCenters","useEffect","API","get","then","response","_response$data","data","catch","err","console","error","setTimeout","_jsxs","Container","className","children","_jsx","style","width","margin","Formik","onSubmit","handleSubmit","values","_ref","resetForm","post","type","message","log","_ref2","errors","touched","Form","Alert","variant","Field","id","as","map","value","title","visibility","Button","containerStyle","height","borderRadius","lat","lng","isLoaded","useLoadScript","googleMapsApiKey","GoogleMap","mapContainerStyle","zoom","MarkerF","position","Rings","color","radius","wrapperStyle","display","justifyContent","alignItems","wrapperClass","visible","ariaLabel","handleCall","handleButtonClick","navigation","setNavigation","loader","setLoader","_response$data2","Circles","Breadcrumb","Item","to","active","Row","Col","lg","address","onClick","title_second","parseFloat","latitude","longitude","phone","redirectToGoogleMaps","url","concat","window","open","Contact","callBackFormRef","useRef","scrollTo","_Fragment","Helmet","content","rel","href","GetInTouch","phoneNumber","location","y","current","getBoundingClientRect","top","pageYOffset","behavior","ref"],"sourceRoot":""}